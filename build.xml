<project xmlns:jacoco="antlib:org.jacoco.ant">

    <property name='src.dir' location='./src' />
    <property name='result.dir' location='./out' />
    <property name='result.classes.dir' location='${result.dir}/classes' />
    <property name='result.report.dir' location='${result.dir}/site/jacoco' />
    <property name='result.exec.file' location='${result.dir}/jacoco.exec' />

    <taskdef uri='antlib:org.jacoco.ant' resource='org/jacoco/ant/antlib.xml'>
        <classpath path='./jacoco-0.7.9/lib/jacocoant.jar'/>
    </taskdef>

    <target name='clean'>
        <delete dir='${result.dir}'/>
    </target>

    <target name='compile'>
        <mkdir dir='${result.classes.dir}'/>
        <javac srcdir='${src.dir}' destdir='${result.classes.dir}'/>
    </target>

    <target name='test' depends='compile'>
        <!-- Step 2: Wrap test execution with the JaCoCo coverage task -->
        <jacoco:coverage destfile ='${result.exec.file}'>
            <junit fork="true" forkmode="once">
                <test name="TestJunit"/>
                <classpath>
                    <pathelement location="./src"/>
                </classpath>
            </junit>
        </jacoco:coverage>
    </target>

    <target name='report' depends='test'>
        <!-- Step 3: Create coverage report -->
        <jacoco:report>

            <!-- This task needs the collected execution data and ... -->
            <executiondata>
                <file file='${result.exec.file}' />
            </executiondata>

            <!-- the class files and optional source files ... -->
            <structure name='JaCoCo Ant Example'>
                <classfiles>
                    <fileset dir='${result.classes.dir}' />
                </classfiles>
                <sourcefiles encoding='UTF-8'>
                    <fileset dir='${src.dir}' />
                </sourcefiles>
            </structure>

            <!-- to produce reports in different formats. -->
            <html destdir='${result.report.dir}' />
            <csv destfile='${result.report.dir}/report.csv' />
            <xml destfile='${result.report.dir}/report.xml' />
        </jacoco:report>
    </target>


    <target name='run'>
        <java jar='out/jar/HelloWorld.jar' fork='true'/>
    </target>

</project>